version: '3.8'
services:
  database:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_USER: "user"
      # Aligned password to be consistent
      MYSQL_PASSWORD: "root@2025db" 
      MYSQL_DATABASE: "ostock_db"
    volumes:
      # Assuming you'll adjust your init.sql/data.sql files for MySQL syntax
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
      # Config Server remains on host port 8089
      - "8089:8089" 
    environment:
      SERVER_PORT: "8089"
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
      spring.cloud.config.server.git.uri: "file:///usr/local/configserver/config-repo"
    volumes:
      - ./config-repo:/usr/local/configserver/config-repo
    networks:
      backend:
        aliases:
          - "configserver"

  licensingservice:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: "test" 
      CONFIGSERVER_URI: "http://configserver:8089"
      CONFIGSERVER_PORT: "8089"
      DATABASESERVER_PORT: "3306"
      ENCRYPT_KEY: "IMSYMMETRIC"
      # FIX 3: Aligned password with the database service's password
      MYSQL_PASSWORD: "root@2025db" 
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      # FIX 1 & 2: Changed host port to 8080 (standard Spring Boot port) and mapped to container port 8080
      - "8080:8080" 
    networks:
      - backend

networks:
  backend:
    driver: bridge